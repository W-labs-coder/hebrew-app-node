{% comment %}
  This extension controls RTL/LTR direction, Buy Now text, theme font, and footer banners.
{% endcomment %}

{% assign buy_now_text = shop.metafields.custom.buy_now_button_text.value | default: 'Buy Now' %}
{% assign alternative_font = shop.metafields.custom.font.value | default: "'Arial', sans-serif" %}
{% assign enable_footer_banners = block.settings.enable_footer_banners %}
{% assign whatsapp_phone = shop.metafields.custom.whatsapp_number.value %}
{% assign whatsapp_position = shop.metafields.custom.whatsapp_position.value | default: 'right' %}
{% assign whatsapp_style = shop.metafields.custom.whatsapp_style.value | default: 'text_and_icon' %}
{% assign whatsapp_bg_color = shop.metafields.custom.whatsapp_bg_color.value | default: '#25D366' %}
{% assign whatsapp_text_color = shop.metafields.custom.whatsapp_text_color.value | default: '#FFFFFF' %}
{% assign whatsapp_icon_color = shop.metafields.custom.whatsapp_icon_color.value | default: '#FFFFFF' %}
{% assign button_label = shop.metafields.custom.whatsapp_button_label.value | default: 'Contact Us' %}

{% assign enable_welcome_message = shop.metafields.custom.whatsapp_welcome_enabled.value | default: false %}
{% assign welcome_message = shop.metafields.custom.whatsapp_welcome_message.value | default: "היי! איך אפשר לעזור היום?" %}
{% assign message_frequency = shop.metafields.custom.whatsapp_message_frequency.value | default: 1 %}
{% assign message_delay = shop.metafields.custom.whatsapp_message_delay.value | default: 0 %}
{% assign enable_default_message = shop.metafields.custom.whatsapp_default_enabled.value | default: false %}
{% assign default_message = shop.metafields.custom.whatsapp_default_message.value | default: '' %}

{% assign whatsapp_widget_enabled = shop.metafields.custom.whatsapp_widget_enabled.value | default: false %}
{% assign whatsapp_title_bg_color = shop.metafields.custom.whatsapp_title_bg_color.value | default: '#05B457' %}
{% assign whatsapp_title_text_color = shop.metafields.custom.whatsapp_title_text_color.value | default: '#FFFFFF' %}

{% assign is_sabbath_mode = shop.metafields.custom.sabbath_mode.value | default: false %}
{% assign opening_day = shop.metafields.custom.opening_day.value | default: 'Saturday' %}
{% assign opening_time = shop.metafields.custom.opening_time.value | default: '20:00' %}
{% assign banner_text = shop.metafields.custom.banner_text.value %}
{% assign banner_bg_color = shop.metafields.custom.banner_bg_color.value | default: '#FFFFFF' %}
{% assign banner_text_color = shop.metafields.custom.banner_text_color.value | default: '#000000' %}
{% assign sabbath_file = shop.metafields.custom.sabbath_file.value %}

{%- capture payment_processor_images -%}
  {%- for processor in shop.metafields.custom.payment_processors.value -%}
    <img 
      src="{{ processor.icon }}" 
      alt="{{ processor.name }}" 
      width="50" 
      height="30" 
      class="payment-icon" 
    />
  {%- endfor -%}
{%- endcapture -%}

{%- capture payment_features_images -%}
  {%- for feature in shop.metafields.custom.payment_features.value -%}
    <img 
      src="{{ feature.icon }}" 
      alt="{{ feature.name }}" 
      width="50" 
      height="30" 
      class="feature-icon" 
    />
  {%- endfor -%}
{%- endcapture -%}

{%- capture selected_calendars -%}
  {%- for calendar in shop.metafields.custom.selected_calendars.value -%}
    <img 
      src="{{ calendar.icon }}" 
      alt="{{ calendar.name }}" 
      width="50" 
      height="30" 
      class="calendar-icon" 
    />
  {%- endfor -%}
{%- endcapture -%}

{%- assign default_avatar_url = 'user-avatar.png' | asset_url | default: 'https://cdn.shopify.com/s/files/default-avatar.png' -%}

{% comment %} First, ensure we're getting the contacts data {% endcomment %}
{% assign contacts = shop.metafields.custom.contacts.value | default: '' %}
{% if contacts == '' %}
  {% assign contacts = '' | split: ',' %}
{% endif %}

{% if contacts == blank %}
{% assign contacts = shop.metafields.custom.contacts.value | default: '[]' %}
{% endif %}

{% assign show_simple_button = block.settings.enable_whatsapp | default: false %}
{% assign accessibility_icon_type = shop.metafields.custom.accessibility_icon_type.value | default: 'default' %}
{% assign accessibility_button_icon_color = shop.metafields.custom.accessibility_button_icon_color.value | default: '#FFFFFF' %}
{% assign accessibility_button_text_color = shop.metafields.custom.accessibility_button_text_color.value | default: '#FFFFFF' %}
{% assign accessibility_help_title = shop.metafields.custom.accessibility_help_title.value | default: 'Accessibility Options' %}
{% assign accessibility_button_bg_color = shop.metafields.custom.accessibility_button_bg_color.value | default: '#0066cc' %}
{% assign accessibility_icon_shape = shop.metafields.custom.accessibility_icon_shape.value | default: 'rounded' %}
{% assign accessibility_icon_size = shop.metafields.custom.accessibility_icon_size.value | default: 'medium' %}
{% assign accessibility_help_text = shop.metafields.custom.accessibility_help_text.value | default: 'This website is committed to accessibility for all users.' %}
{% assign accessibility_owner_email = shop.metafields.custom.accessibility_owner_email.value | default: '' %}
{% assign accessibility_zindex = shop.metafields.custom.accessibility_zindex.value | default: '999999' %}
{% assign accessibility_top_spacing = shop.metafields.custom.accessibility_top_spacing.value | default: '20' %}
{% assign accessibility_left_spacing = shop.metafields.custom.accessibility_left_spacing.value | default: '20' %}
{% assign accessibility_icon_location = shop.metafields.custom.accessibility_icon_location.value | default: 'bottom_right' %}


{% if block.settings.enable_whatsapp %}
  {% if whatsapp_widget_enabled and contacts.size > 0 %}
    <div class="whatsapp-floating-widget" style="position: fixed; {{ whatsapp_position }}: 20px; bottom: 20px; z-index: 999999;">
      <div class="whatsapp-widget-container" data-state="expanded">
        <!-- Widget Header -->
        <div class="whatsapp-widget-header" style="background-color: {{ whatsapp_title_bg_color }};">
          <div class="whatsapp-widget-controls">
            <div class="whatsapp-minimize-button" aria-label="Minimize widget" style="color: {{ whatsapp_title_text_color }}">
              <svg width="12" height="12" viewBox="0 0 12 12">
                <path stroke="{{ whatsapp_title_text_color }}" d="M2 6l4 4 4-4" stroke-width="2" fill="none"/>
              </svg>
            </div>
            <div class="whatsapp-close-button" aria-label="Close widget" style="color: {{ whatsapp_title_text_color }}">
              <svg width="12" height="12" viewBox="0 0 12 12">
                <path stroke="{{ whatsapp_title_text_color }}" d="M1 1l10 10m0-10L1 11" stroke-width="2" fill="none"/>
              </svg>
            </div>
          </div>
          <div class="whatsapp-header-content" style="color: {{ whatsapp_title_text_color }};">
            <h2>!היי</h2>
            <p>.אנחנו כאן כדי לעזור. שוחח איתנו בווטסאפ לכל שאלה</p>
          </div>
        </div>
        <div class="whatsapp-widget-body">
          {% for contact in contacts %}
            <div class="whatsapp-contact" 
                 onclick="openWhatsApp('{{ contact.phone }}', '{{ contact.default_message }}')" 
                 style="cursor: pointer;">
              <div class="whatsapp-avatar">
                {% if contact.avatar_url %}
                  <img src="{{ contact.avatar_url |  asset_url }}" alt="{{ contact.name }}" width="40" height="40">
                {% else %}
                  <img src="{{ default_avatar_url |  asset_url }}" alt="{{ contact.name }}" width="40" height="40">
                {% endif %}
              </div>
              <div class="whatsapp-contact-info">
                <span class="contact-name">{{ contact.name }}</span>
                {% if contact.role %}
                  <span class="contact-role">{{ contact.role }}</span>
                {% endif %}
                <span class="contact-status">צ'אט איתנו</span>
              </div>
              {% if contact.available_hours %}
                <div class="contact-hours">{{ contact.available_hours }}</div>
              {% endif %}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
      });
    </script>
  {% endif %}
{% endif %}

  {% if show_simple_button and whatsapp_phone != blank %}
  <div class="whatsapp-widget">
    <a href="javascript:void(0);" 
       onclick="openWhatsApp('{{ whatsapp_phone }}')"
       class="whatsapp-button {{ whatsapp_style }}"
       style="background-color: {{ whatsapp_bg_color }};">
      <div class="whatsapp-icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="{{ whatsapp_icon_color }}">
          <path d="M20.4054 3.4875C18.1607 1.2375 15.1714 0 11.9946 0C5.4375 0 0.101786 5.33571 0.101786 11.8929C0.101786 13.9875 0.648214 16.0339 1.68214 17.8393L0 24L6.30536 22.3446C8.04107 23.2929 9.99643 23.7911 11.9893 23.7911H11.9946C18.5464 23.7911 24 18.4554 24 11.8982C24 8.72143 22.65 5.7375 20.4054 3.4875ZM11.9946 21.7875C10.2161 21.7875 8.475 21.3107 6.95357 20.4107L6.59464 20.1964L2.85536 21.1768L3.85179 17.5286L3.61607 17.1536C2.63036 15.5786 2.11071 13.7625 2.11071 11.8929C2.11071 6.44464 6.54643 2.00893 12 2.00893C14.6411 2.00893 17.1214 3.0375 19.0179 4.93929C20.9143 6.84107 21.9964 9.32143 21.9911 11.8982C21.9911 17.3518 17.4429 21.7875 11.9946 21.7875ZM17.4161 14.3839C17.1214 14.2339 15.6589 13.5161 15.3857 13.4143C15.1125 13.3179 14.9143 13.2696 14.7161 13.5589C14.5179 13.8482 13.95 14.5179 13.7732 14.7161C13.5964 14.9196 13.4143 14.9411 13.1196 14.7911C11.3946 13.9286 10.2589 13.2482 9.11786 11.3036C8.80714 10.7839 9.42321 10.8214 9.99643 9.67500C10.0982 9.47679 10.05 9.30536 9.97500 9.15536C9.90000 9.00536 9.30000 7.54286 9.05357 6.95357C8.81250 6.37500 8.56607 6.45536 8.38393 6.44464C8.20714 6.43393 8.00893 6.43393 7.81071 6.43393C7.61250 6.43393 7.29107 6.50893 7.01786 6.79286C6.74464 7.08214 5.97857 7.80000 5.97857 9.26250C5.97857 10.725 7.03393 12.1339 7.18393 12.3321C7.33393 12.5304 9.29464 15.5304 12.2786 16.8214C14.1214 17.6357 14.8607 17.7214 15.8036 17.5821C16.3768 17.4964 17.5607 16.8589 17.8071 16.1732C18.0536 15.4875 18.0536 14.8982 17.9786 14.7696C17.9089 14.6304 17.7107 14.5339 17.4161 14.3839Z"/>
        </svg>
      </div>
      {% if whatsapp_style == 'text_and_icon' %}
        <span style="color: {{ whatsapp_text_color }}; margin-right: 8px;">
          {{ button_label }}
        </span>
      {% endif %}
    </a>
  </div>
{% endif %}

  {% if show_simple_button or whatsapp_phone != blank %}
  <script>
    function initializeWhatsApp(phone) {
      try {
        const currentTime = Date.now();
        const lastMessageTime = localStorage.getItem('lastWhatsAppMessage');
        const timeDifference = lastMessageTime ? 
          (currentTime - parseInt(lastMessageTime)) / (1000 * 60 * 60) : null;
        
        const welcomeEnabled = {{ enable_welcome_message | json }};
        const welcomeMessage = "{{ welcome_message | escape }}";
        const messageFrequency = {{ message_frequency | json }};
        const messageDelay = {{ message_delay | default: 0 | json }};

        const shouldSendWelcome = (
          welcomeEnabled && 
          welcomeMessage && 
          (!lastMessageTime || timeDifference >= messageFrequency)
        );

        const defaultEnabled = {{ enable_default_message | json }};
        const defaultMessage = "{{ default_message | escape }}";

        // Send initial message
        let initialUrl = `https://wa.me/${phone}`;
        if (defaultEnabled && defaultMessage && defaultMessage.trim() !== '') {
          initialUrl += `?text=${encodeURIComponent(defaultMessage)}`;
        }
        window.open(initialUrl, '_blank');

        // Send welcome message after delay if enabled
        if (shouldSendWelcome) {
          setTimeout(() => {
            try {
              const welcomeUrl = `https://wa.me/${phone}?text=${encodeURIComponent(welcomeMessage)}`;
              window.open(welcomeUrl, '_blank');
              localStorage.setItem('lastWhatsAppMessage', currentTime.toString());
            } catch (error) {
              console.error('Error sending welcome message:', error);
            }
          }, messageDelay * 1000); // Convert delay to milliseconds
        }
      } catch (error) {
        console.error('WhatsApp initialization error:', error);
        window.open(`https://wa.me/${phone}`, '_blank');
      }
    }

    function openWhatsApp(phone, defaultMessage = '') {
      try {
        const cleanPhone = phone.replace(/\D/g, '');
        initializeWhatsApp(cleanPhone);
      } catch (error) {
        console.error('Error opening WhatsApp:', error);
        const cleanPhone = phone.replace(/\D/g, '');
        window.open(`https://wa.me/${cleanPhone}`, '_blank');
      }
    }
  </script>
{% endif %}

  <style>
    .whatsapp-button {
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: transform 0.3s ease;
      border-radius: 10px;
      padding: 8px 16px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      position: fixed !important;
      bottom: 20px !important;
      {% if whatsapp_position == 'right' %}
        right: 20px !important;
      {% else %}
        left: 20px !important;
      {% endif %}
      z-index: 999999 !important;
      animation: floatButton 3s ease-in-out infinite;
    }

    @keyframes floatButton {
      0% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-10px);
      }
      100% {
        transform: translateY(0);
      }
    }

    .whatsapp-button:hover {
      transform: scale(1.1);
      animation-play-state: paused;
    }

    .whatsapp-button.text_and_icon {
      min-width: 160px;
    }

    .whatsapp-button.icon {
      width: 60px;
      height: 60px;
      padding: 10px;
      border-radius: 50%;
    }

    .whatsapp-button span {
      font-family: var(--custom-font, 'Rubik'), sans-serif;
      font-size: 14px;
      font-weight: 500;
    }

    .whatsapp-button img {
      filter: brightness(0) invert(1);
    }

  .whatsapp-widget {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }

  .whatsapp-button {
    display: flex !important;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.3s ease;
    border-radius: 10px;
    padding: 8px 16px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    min-width: 160px;
    text-decoration: none;
  }

  .whatsapp-button.icon {
    min-width: auto;
    width: 60px;
    height: 60px;
    padding: 10px;
    border-radius: 50%;
  }

  .whatsapp-button span {
    font-family: var(--custom-font, 'Rubik'), sans-serif;
    font-size: 14px;
    font-weight: 500;
    white-space: nowrap;
  }

  .whatsapp-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
  }

  .whatsapp-button.icon .whatsapp-icon {
    width: 32px;
    height: 32px;
  }

  .whatsapp-icon svg {
    width: 100%;
    height: 100%;
  }

  .whatsapp-button:hover {
    transform: scale(1.05);
  }

  .whatsapp-widget {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
  }

  .whatsapp-widget.icon {
    width: 60px !important;
    height: 60px !important;
  }
  
  .whatsapp-button {
    display: flex !important;
    visibility: visible !important;
    opacity: 1 !important;
  }

  /* Hide any duplicate payment feature sections */
  .payment-section:not(.footer-banners .payment-section) {
    display: none !important;
  }
  
  /* Ensure footer banner images are properly sized */
  .footer-banners .image-container img {
    max-width: 50px;
    height: auto;
    margin: 5px;
    display: inline-block;
  }

  .whatsapp-floating-widget {
    position: fixed !important;
    z-index: 999999 !important;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
    width: 300px;
    max-width: 100%;
  }

  .whatsapp-widget-container {
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    overflow: hidden;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }

  .whatsapp-widget {
    display: flex !important;
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
  }

  .whatsapp-button {
    display: flex !important;
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
  }

  .whatsapp-widget-container {
    transition: height 0.3s ease;
    overflow: hidden;
  }

  .whatsapp-widget-container.minimized {
    height: 60px !important;
  }

  .whatsapp-widget-container.minimized .whatsapp-widget-body {
    display: none !important;
  }

  .whatsapp-minimize-button svg {
    transition: transform 0.3s ease;
  }

  .whatsapp-widget-container.minimized .whatsapp-minimize-button svg {
    transform: rotate(180deg);
  }

  .whatsapp-widget-container.hidden {
    display: none !important;
  }

  /* Widget Styles */
.whatsapp-widget-container {
  width: 300px;
  background: white;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  overflow: hidden;
}

.whatsapp-widget-header {
  position: relative;
  padding: 20px;
  border-radius: 10px 10px 0 0;
}

.whatsapp-widget-header h2 {
  margin: 0 0 8px 0;
  font-size: 26px;
  line-height: 31px;
  font-weight: 600;
}

.whatsapp-widget-header p {
  margin: 0;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
}

.whatsapp-widget-body {
  padding: 16px;
  background: white;
}

.whatsapp-contact {
  display: flex;
  align-items: center;
  padding: 12px;
  border-radius: 8px;
  transition: background-color 0.3s;
  margin-bottom: 8px;
  background: white;
}

.whatsapp-contact:hover {
  background-color: #f5f5f5;
}

.whatsapp-contact-info{
display:flex; 
flex-direction: column;
}

.whatsapp-header-content {
 
  padding-right: 16px;
}

/* Ensure controls are visible against any background */
.whatsapp-widget-controls {
  display: flex;
  gap: 8px;
  left: 12px;
  top: 12px;
  z-index: 1;
}

.whatsapp-floating-widget {
  max-height: 90vh !important;
  display: flex !important;
}

.whatsapp-widget-container {
  width: 300px;
  max-height: 90vh !important;
  background: white;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  overflow: hidden;
  display: flex !important;
  flex-direction: column !important;
}

.whatsapp-widget-header {
  position: relative;
  padding: 20px;
  border-radius: 10px 10px 0 0;
  flex-shrink: 0; /* Prevent header from shrinking */
}

.whatsapp-widget-body {
  padding: 16px;
  background: white;
  overflow-y: auto; /* Make contacts scrollable */
  flex-grow: 1; /* Allow body to take remaining space */
  max-height: calc(90vh - 120px); /* Account for header height */
}

/* Add smooth scrolling to the contacts area */
.whatsapp-widget-body::-webkit-scrollbar {
  width: 6px;
}

.whatsapp-widget-body::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 3px;
}

.whatsapp-widget-body::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 3px;
}

.whatsapp-widget-body::-webkit-scrollbar-thumb:hover {
  background: #666;
}
</style>

<!-- Fonts are loaded via schema.json externals -->


<script>
document.addEventListener('DOMContentLoaded',function(){function setRTL(e){const t=document.documentElement,n=document.body;e?(t.setAttribute("dir","rtl"),t.setAttribute("lang","he"),n.setAttribute("dir","rtl"),n.style.direction="rtl",document.body.classList.add("rtl-enabled")):(t.setAttribute("dir","ltr"),t.setAttribute("lang","en"),n.setAttribute("dir","ltr"),n.style.direction="ltr",document.body.classList.remove("rtl-enabled"))}function updateBuyNowText(){if(window.enableBuyNowText&&window.buyNowText){document.querySelectorAll(".shopify-payment-button__button").forEach(e=>{e&&(e.textContent=window.buyNowText)});document.querySelectorAll(".shopify-payment-button__more-options").forEach(e=>{e&&(e.textContent=window.buyNowText)})}}function displayFooterBanners(){if(!window.enableFooterBanners)return;const e=document.querySelector("footer");if(!e)return;const t=document.querySelector(".footer-banners");t&&t.remove();const n=document.createElement("div");n.classList.add("footer-banners"),n.innerHTML=`<div class="footer-banner-content">{% if payment_processor_images != blank %}<div class="payment-processors"><h4>אמצעי תשלום</h4><div class="image-container">{{ payment_processor_images }}</div></div>{% endif %}{% if payment_features_images != blank and block.settings.enable_footer_banners %}<div class="payment-features"><div class="image-container">{{ payment_features_images }}</div></div>{% endif %}<div class="shipping-warranty">{% if shop.metafields.custom.shipping_option.value != blank %}<p>משלוח: {{ shop.metafields.custom.shipping_option.value }}</p>{% endif %}{% if shop.metafields.custom.warranty_days.value != blank %}<p>אחריות: {{ shop.metafields.custom.warranty_days.value }} ימים</p>{% endif %}</div></div><style>.footer-banners{width:100%;padding:20px;margin-top:20px;text-align:center;background:transparent}.footer-banner-content{max-width:1200px;margin:0 auto;display:flex;flex-direction:column;gap:20px}.payment-processors h4{margin-bottom:10px;font-weight:600}.image-container{display:flex;flex-wrap:wrap;justify-content:center;gap:10px;margin:10px 0}.image-container img{max-width:50px;height:auto;margin:5px}.shipping-warranty{font-weight:500;margin-top:10px}.shipping-warranty p{margin:5px 0}</style>`,e.insertAdjacentElement("afterbegin",n)}window.buyNowText={{ buy_now_text | json }},window.alternativeFont={{ alternative_font | json }},window.enableBuyNowText={{ block.settings.enable_buy_now_text }},window.enableAlternativeFont={{ block.settings.enable_alternative_font }},window.enableFooterBanners={{ enable_footer_banners | json }},window.enableWhatsApp={{ block.settings.enable_whatsapp }},setRTL({{ block.settings.enable_rtl }}),updateBuyNowText(),displayFooterBanners();const e=new MutationObserver(e=>{e.forEach(e=>{e.addedNodes.length&&updateBuyNowText()})});e.observe(document.body,{childList:!0,subtree:!0}),document.addEventListener("shopify:block:select",function(e){e.detail.blockId==={{ block.id | json }}&&(setRTL({{ block.settings.enable_rtl }}),updateBuyNowText(),displayFooterBanners())})});
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    (function () {
      const htmlElement = document.documentElement;
      const bodyElement = document.body;
      const buyNowText = {{ buy_now_text | json }};
      const alternativeFont = {{ alternative_font | json }};
      const enableBuyNowText = {{ block.settings.enable_buy_now_text }};
      const enableAlternativeFont = {{ block.settings.enable_alternative_font }};
      const enableFooterBanners = {{ enable_footer_banners | json }};
      const paymentProcessorImages = {{ payment_processor_images | json }};
      const paymentFeatureImages = {{ payment_features_images | json }};
      const selectedCalendarImage = {{ selected_calendars | json }};
      const shippingOption = {{ shop.metafields.custom.shipping_option.value | json }};
      const warrantyDays = {{ shop.metafields.custom.warranty_days.value | json }};
      const enableWhatsApp = {{ block.settings.enable_whatsapp }};

      function setRTL(isRTL) {
  const htmlElement = document.documentElement;
  const bodyElement = document.body;
  
  if (isRTL) {
    htmlElement.setAttribute('dir', 'rtl');
    htmlElement.setAttribute('lang', 'he');
    bodyElement.setAttribute('dir', 'rtl');
    bodyElement.style.direction = 'rtl';
    document.body.classList.add('rtl-enabled');
  } else {
    htmlElement.setAttribute('dir', 'ltr');
    htmlElement.setAttribute('lang', 'en');
    bodyElement.setAttribute('dir', 'ltr');
    bodyElement.style.direction = 'ltr';
    document.body.classList.remove('rtl-enabled');
  }
}


     function updateBuyNowText() {
  if (enableBuyNowText && buyNowText) {
    const buttons = document.querySelectorAll('.shopify-payment-button__button');
    buttons.forEach(button => {
      if (button) {
        const originalText = button.textContent;
        button.textContent = buyNowText;
      }
    });
    
    // Also update dynamic checkout buttons
    const dynamicButtons = document.querySelectorAll('.shopify-payment-button__more-options');
    dynamicButtons.forEach(button => {
      if (button) {
        button.textContent = buyNowText;
      }
    });
  }
}


      function setAlternativeFont(enable) {
        if (enable && alternativeFont) {
          document.documentElement.style.setProperty('--custom-font', alternativeFont);
          document.body.classList.add('custom-font-applied');
          
          // Apply font to all elements
          const allElements = document.getElementsByTagName('*');
          for (let i = 0; i < allElements.length; i++) {
            if (!allElements[i].classList.contains('fa') && 
                !allElements[i].classList.contains('fas') && 
                !allElements[i].classList.contains('far') && 
                !allElements[i].classList.contains('fal') && 
                !allElements[i].classList.contains('fab')) {
              allElements[i].style.fontFamily = `var(--custom-font, 'Rubik'), sans-serif`;
            }
          }
          
          // Force a reflow to ensure the font is applied
          document.body.style.display = 'none';
          document.body.offsetHeight; // Trigger a reflow
          document.body.style.display = '';
        } else {
          document.documentElement.style.setProperty('--custom-font', '');
          document.body.classList.remove('custom-font-applied');
          
          // Remove inline font-family style from all elements
          const allElements = document.getElementsByTagName('*');
          for (let i = 0; i < allElements.length; i++) {
            allElements[i].style.removeProperty('font-family');
          }
        }
      }

    function displayFooterBanners() {
  // Early return if disabled
  if (!window.enableFooterBanners) {
    return;
  }

  // Find footer element
  const footer = document.querySelector('footer');
  if (!footer) {
    return;
  }

  // Remove existing banner if present
  const existingBanner = document.querySelector('.footer-banners');
  if (existingBanner) {
    existingBanner.remove();
  }

  // Create footer banner container
  const footerBanner = document.createElement('div');
  footerBanner.classList.add('footer-banners');
  
  // Build banner content with proper Liquid syntax
  footerBanner.innerHTML = `
    <div class="footer-banner-content">
      {% if payment_processor_images != blank %}
        <div class="payment-processors">
          <h4>אמצעי תשלום</h4>
          <div class="image-container">
            {{ payment_processor_images }}
          </div>
        </div>
      {% endif %}
      
      {% if payment_features_images != blank and block.settings.enable_footer_banners %}
        <div class="payment-features">
          <div class="image-container">
            {{ payment_features_images }}
          </div>
        </div>
      {% endif %}
      
      <div class="shipping-warranty">
        {% if shop.metafields.custom.shipping_option.value != blank %}
          <p>משלוח: {{ shop.metafields.custom.shipping_option.value }}</p>
        {% endif %}
        {% if shop.metafields.custom.warranty_days.value != blank %}
          <p>אחריות: {{ shop.metafields.custom.warranty_days.value }} ימים</p>
        {% endif %}
      </div>
    </div>
  `;

  // Add styles
  const styles = `
    <style>
      .footer-banners {
        width: 100%;
        padding: 20px;
        margin-top: 20px;
        text-align: center;
        background: transparent;
      }
      
      .footer-banner-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        gap: 20px;
      }
      
      .payment-processors h4 {
        margin-bottom: 10px;
        font-weight: 600;
      }
      
      .image-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
        margin: 10px 0;
      }
      
      .image-container img {
        max-width: 50px;
        height: auto;
        margin: 5px;
      }
      
      .shipping-warranty {
        font-weight: 500;
        margin-top: 10px;
      }
      
      .shipping-warranty p {
        margin: 5px 0;
      }
    </style>
  `;
  
  // Insert styles and banner
  footerBanner.insertAdjacentHTML('beforeend', styles);
  footer.insertAdjacentElement('afterbegin', footerBanner);
}


      // Set initial states
      setRTL({{ block.settings.enable_rtl }});
      updateBuyNowText();
      setAlternativeFont({{ block.settings.enable_alternative_font }});
      displayFooterBanners(); // Call to display footer banners
      
      // Update WhatsApp visibility based on setting
      const whatsappButton = document.querySelector('.whatsapp-button');
      if (whatsappButton) {
        whatsappButton.style.display = enableWhatsApp ? 'flex' : 'none';
      }

      // Listen for changes from the Shopify Theme Editor
      document.addEventListener('shopify:block:select', function (event) {
        if (event.detail.blockId === {{ block.id | json }}) {
          setRTL({{ block.settings.enable_rtl }});
          updateBuyNowText();
          setAlternativeFont({{ block.settings.enable_alternative_font }});
          displayFooterBanners(); 
          if (whatsappButton) {
            whatsappButton.style.display = enableWhatsApp ? 'flex' : 'none';
          }
        }
      });
    })();
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  // Initialize all features
  setRTL({{ block.settings.enable_rtl }});
  updateBuyNowText();
  displayFooterBanners();

  // Add mutation observer for dynamic content
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.addedNodes.length) {
        updateBuyNowText(); // Update buy now text when new nodes are added
      }
    });
  });

  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
});
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
  const initializeWhatsApp = () => {
    const widgetEnabled = {{ whatsapp_widget_enabled | json }};
    const whatsappPhone = '{{ whatsapp_phone }}';
    const position = '{{ whatsapp_position }}'; // Use the assigned variable
    
    if (widgetEnabled && whatsappPhone) {
      // Force show the widget
      const widget = document.querySelector('.whatsapp-floating-widget');
      const simpleButton = document.querySelector('.whatsapp-widget');
      
      if (widget) {
        widget.style.cssText = `
          position: fixed !important;
          bottom: 20px !important;
          ${position}: 20px !important;
          z-index: 999999 !important;
          display: block !important;
          visibility: visible !important;
          opacity: 1 !important;
          pointer-events: auto !important;
          width: 300px;
          max-width: 100%;
        `;
      }
      
      if (simpleButton) {
        simpleButton.style.cssText = `
          position: fixed !important;
          bottom: 20px !important;
          ${position}: 20px !important;
          z-index: 999999 !important;
          display: flex !important;
          visibility: visible !important;
          opacity: 1 !important;
          pointer-events: auto !important;
        `;
      }
    }
  };

  // Initial call
  initializeWhatsApp();
  
  // Re-run after a short delay to ensure all elements are loaded
  setTimeout(initializeWhatsApp, 1000);
});
</script>

<script>
// Add to your existing JavaScript
document.addEventListener('DOMContentLoaded', function() {
  const container = document.querySelector('.whatsapp-widget-container');
  const minimizeButton = document.querySelector('.whatsapp-minimize-button');
  const closeButton = document.querySelector('.whatsapp-close-button');

  if (minimizeButton) {
    minimizeButton.addEventListener('click', function() {
      const isMinimized = container.getAttribute('data-state') === 'minimized';
      container.setAttribute('data-state', isMinimized ? 'expanded' : 'minimized');
      
      // Store state in localStorage
      localStorage.setItem('whatsappWidgetState', isMinimized ? 'expanded' : 'minimized');
    });
  }

  if (closeButton) {
    closeButton.addEventListener('click', function() {
      container.style.display = 'none';
      // Store closed state in localStorage
      localStorage.setItem('whatsappWidgetClosed', 'true');
      
      // Show widget again after 24 hours
      setTimeout(() => {
        container.style.display = 'block';
        localStorage.removeItem('whatsappWidgetClosed');
      }, 24 * 60 * 60 * 1000);
    });
  }

  // Restore previous state on page load
  const savedState = localStorage.getItem('whatsappWidgetState');
  const isClosed = localStorage.getItem('whatsappWidgetClosed');
  
  if (savedState === 'minimized') {
    container.setAttribute('data-state', 'minimized');
  }
  
  if (isClosed === 'true') {
    container.style.display = 'none';
  }
});
</script>

{% if is_sabbath_mode %}
<div class="sabbath-overlay">
  <div class="sabbath-header">
    <div class="store-logo">
      <h1>{{ shop.name }}</h1>
    </div>
    <p class="contact-us">Contact us</p>
  </div>

  <div class="sabbath-content">
    <div class="sabbath-title">
      <h2>STORE CLOSED!!!</h2>
      <p>{{ banner_text | default: "היי, שיהיה לכם שבת שלום! נראה אתכם אחרי צאת שבת" }}</p>
    </div>
    
    <div class="sabbath-banner" 
         style="background-color: {{ banner_bg_color }}; color: {{ banner_text_color }};">
      {% if sabbath_file %}
        <img src="{{ sabbath_file |  asset_url }}" alt="Sabbath Banner" class="banner-image" width="730" height="282">
      {% endif %}
      <div class="banner-overlay"></div>
    </div>

    <div class="countdown-wrapper">
      <h3>Store opens on</h3>
      <div class="countdown" 
           data-opening-day="{{ opening_day }}"
           data-opening-time="{{ opening_time }}">
        <div class="time-box">
          <span class="number">0</span>
          <span class="label">Days</span>
        </div>
        <div class="time-box">
          <span class="number">0</span>
          <span class="label">Hours</span>
        </div>
        <div class="time-box">
          <span class="number">0</span>
          <span class="label">Minutes</span>
        </div>
        <div class="time-box">
          <span class="number">0</span>
          <span class="label">Seconds</span>
        </div>
      </div>
    </div>

{% assign social_links = shop.metafields.custom.social_links.value | default: '' %}
{% if social_links == '' %}
{% assign social_links = '' | split: ',' %}
{% endif %}

{% if social_links == blank %}
  {% assign social_links = shop.metafields.custom.social_links.value %}
{% endif %}

{% if social_links.size > 0 %}
<div class="social-links-container">
  <div class="social-links-grid">
    {% for link in social_links %}
      <a href="{{ link }}" target="_blank" rel="noopener noreferrer" class="social-link">
        {% if link contains 'facebook' %}
          <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/200
          
          0/svg">
            <path d="M17.9022 6.43947C16.8077 6.43938 15.8344 6.4393 15.0486 6.54497C14.1946 6.65983 13.3322 6.92469 12.6274 7.62973C11.9226 8.33477 11.6578 9.19742 11.543 10.0517C11.4373 10.8377 11.4374 11.8113 11.4375 12.9061L11.4375 13.9418H10.5C9.63706 13.9418 8.9375 14.6416 8.9375 15.5048C8.9375 16.368 9.63706 17.0678 10.5 17.0678H11.4375V24.5647C11.4375 25.1575 11.4375 25.4539 11.2516 25.6375C11.0658 25.8211 10.7716 25.8174 10.1834 25.8099C8.69657 25.7911 7.43219 25.7389 6.36003 25.5948C4.63921 25.3633 3.27389 24.8794 2.20114 23.8063C1.12839 22.7332 0.644602 21.3675 0.413243 19.6461C0.187472 17.9663 0.187484 15.8148 0.1875 13.0756V12.9325C0.187484 10.1933 0.187472 8.04177 0.413243 6.36197C0.644602 4.64061 1.12839 3.27486 2.20114 2.20177C3.27389 1.12869 4.63921 0.644745 6.36003 0.413313C8.03929 0.187472 10.1902 0.187484 12.9285 0.1875H13.0715C15.8098 0.187484 17.9607 0.187472 19.64 0.413313C21.3608 0.644745 22.7261 1.12869 23.7989 2.20177C24.8716 3.27486 25.3554 4.64061 25.5868 6.36197C25.8125 8.04176 25.8125 10.1933 25.8125 12.9326V13.0756C25.8125 15.8148 25.8125 17.9663 25.5868 19.6461C25.3554 21.3675 24.8716 22.7332 23.7989 23.8063C22.7261 24.8794 21.3608 25.3633 19.64 25.5948C18.5678 25.7389 17.3034 25.7911 15.8166 25.8099C15.2284 25.8174 14.9342 25.8211 14.7484 25.6375C14.5625 25.4539 14.5625 25.1575 14.5625 24.5646V17.0678H16.75C17.6129 17.0678 18.3125 16.368 18.3125 15.5048C18.3125 14.6416 17.6129 13.9418 16.75 13.9418H14.5625V13.004C14.5625 11.781 14.5658 11.0209 14.6401 10.4683C14.7071 9.96947 14.8061 9.87094 14.8356 9.84164L14.8371 9.84014L14.8386 9.83863C14.8679 9.80917 14.9664 9.71014 15.465 9.64308C16.0175 9.56878 16.7773 9.56546 18 9.56546H19.25C20.1129 9.56546 20.8125 8.86569 20.8125 8.00247C20.8125 7.13925 20.1129 6.43948 19.25 6.43948L17.9022 6.43947Z" fill="#0D0D0D"/>
          </svg>
        {% elsif link contains 'twitter' %}
          <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.0727 10.2971C13.9309 7.04502 16.5718 4.0625 20.0001 4.0625C21.3432 4.0625 22.5837 4.50943 23.5786 5.26171L27.3618 4.69775C27.709 4.64599 28.0561 4.79254 28.2611 5.07751C28.4661 5.36248 28.4947 5.7381 28.3353 6.05084L25.9182 10.7913C25.5055 19.2261 18.5368 25.9375 10.0001 25.9375C7.13151 25.9375 4.40236 25.3085 2.03063 23.9365C1.67855 23.7328 1.49797 23.3254 1.58355 22.9277C1.66913 22.5301 2.00136 22.233 2.40605 22.1922C3.28436 22.1037 4.6116 21.8508 5.69488 21.4563C6.24102 21.2574 6.66728 21.043 6.93942 20.8344C6.96587 20.8141 6.98957 20.7949 7.01078 20.7769C3.21775 16.6047 1.88506 10.2145 3.45939 4.86677C3.56315 4.51431 3.86325 4.25495 4.22702 4.20333C4.5908 4.15171 4.9512 4.31736 5.14891 4.62704C7.16113 7.77881 10.4579 10.1189 14.0727 10.2971Z" fill="#0D0D0D"/>
          </svg>
        {% elsif link contains 'telegram' %}
          <svg width="28" height="26" viewBox="0 0 28 26" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M17.3801 22.5431L17.3801 22.5431L14.0552 18.7628C12.4092 16.8914 12.2143 16.069 12.3226 15.8917L13.5705 14.8867L18.6284 10.9305C19.0362 10.6115 19.1082 10.0223 18.7892 9.61449C18.4702 9.20667 17.881 9.13465 17.4732 9.45365L12.41 13.4139L10.8874 14.6567C10.5319 15.0381 10.3052 15.6905 10.5525 16.6182C10.7832 17.484 11.4303 18.6283 12.8083 20.1992L12.2994 21.2028C11.9707 21.6597 11.6655 22.0839 11.3846 22.3746C11.1056 22.6635 10.5985 23.0882 9.89217 22.9476C9.19517 22.809 8.8824 22.2328 8.72754 21.863C8.57026 21.4874 8.43705 20.978 8.29253 20.4254L7.66565 18.0299C7.31745 16.6993 7.19721 16.3168 6.97063 16.0353C6.94204 15.9998 6.91225 15.9654 6.88136 15.9323C6.64215 15.6762 6.30432 15.5186 5.06687 15.0226L4.99909 14.9954C3.7796 14.5066 2.77508 14.104 2.07248 13.7084C1.3918 13.3251 0.656752 12.768 0.572191 11.8279C0.559049 11.6818 0.559274 11.5347 0.572864 11.3887C0.660317 10.4488 1.39719 9.89395 2.07907 9.51296C2.7829 9.1197 3.78867 8.72041 5.00966 8.23568L19.9898 2.28815L19.9898 2.28814C21.5221 1.67973 22.775 1.18224 23.7595 0.955428C24.7633 0.724184 25.8002 0.699703 26.6127 1.45126C27.4091 2.18799 27.5044 3.22584 27.4052 4.27184C27.3068 5.30963 26.983 6.65927 26.5836 8.32412L23.559 20.9329L23.559 20.933C23.3045 21.9943 23.0896 22.8901 22.8319 23.5402C22.5716 24.1968 22.1541 24.9021 21.3106 25.1251C20.4567 25.3509 19.7511 24.93 19.2149 24.4762C18.6881 24.0304 18.0874 23.3473 17.3801 22.5431Z" fill="#0D0D0D"/>
          </svg>
        {% elsif link contains 'tiktok' %}
          <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fillRule="evenodd" clipRule="evenodd" d="M12.9285 0.1875H13.0715C15.8098 0.187483 17.9607 0.187471 19.64 0.413242C21.3608 0.644602 22.7261 1.12839 23.7989 2.20114C24.8716 3.27389 25.3554 4.63921 25.5868 6.36003C25.8125 8.03929 25.8125 10.1902 25.8125 12.9285V13.0715C25.8125 15.8099 25.8125 17.9607 25.5868 19.64C25.3554 21.3608 24.8716 22.7261 23.7989 23.7989C22.7261 24.8716 21.3608 25.3554 19.64 25.5868C17.9607 25.8125 15.8098 25.8125 13.0715 25.8125H12.9285C10.1901 25.8125 8.03929 25.8125 6.36003 25.5868C4.63921 25.3554 3.27389 24.8716 2.20114 23.7989C1.12839 22.7261 0.644601 21.3608 0.413242 19.64C0.187471 17.9607 0.187484 15.8099 0.1875 13.0715V13.0715L0.1875 12.9285V12.9285C0.187484 10.1901 0.187471 8.0393 0.413242 6.36003C0.644601 4.63921 1.12839 3.27389 2.20114 2.20114C3.27389 1.12839 4.63921 0.644602 6.36003 0.413242C8.03929 0.187471 10.1902 0.187483 12.9285 0.1875ZM15.8846 6.03572C15.8846 5.39467 15.368 4.875 14.7308 4.875C14.0935 4.875 13.5769 5.39467 13.5769 6.03572V15.9018C13.5769 17.5044 12.2854 18.8036 10.6923 18.8036C9.09918 18.8036 7.80769 17.5044 7.80769 15.9018C7.80769 14.2992 9.09918 13 10.6923 13C10.8334 13 10.9714 13.0101 11.1058 13.0294C11.7367 13.1202 12.3212 12.6794 12.4115 12.0448C12.5017 11.4102 12.0634 10.8222 11.4326 10.7314C11.1902 10.6965 10.943 10.6786 10.6923 10.6786C7.82468 10.6786 5.5 13.0171 5.5 15.9018C5.5 18.7865 7.82468 21.125 10.6923 21.125C13.5599 21.125 15.8846 18.7865 15.8846 15.9018V10.1239C16.8843 10.8272 18.1153 11.2589 19.3462 11.2589C19.9834 11.2589 20.5 10.7393 20.5 10.0982C20.5 9.45717 19.9834 8.9375 19.3462 8.9375C18.5263 8.9375 17.6292 8.59507 16.9417 8.01746C16.2552 7.44067 15.8846 6.72707 15.8846 6.03572Z" fill="#0D0D0D"/>
          </svg>
        {% elsif link contains 'whatsapp' %}
          <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fillRule="evenodd" clipRule="evenodd" d="M14 0.562479C6.57869 0.562479 0.562521 6.57865 0.562521 14C0.562521 15.8511 0.937361 17.6171 1.61617 19.2243C1.79424 19.6459 1.91428 19.9308 1.99446 20.1498C2.07624 20.3731 2.08773 20.4539 2.08917 20.4747C2.09729 20.5921 2.06759 20.7517 1.8649 21.5092L0.594379 26.2577C0.507838 26.5811 0.600358 26.9261 0.837109 27.1629C1.07386 27.3996 1.4189 27.4922 1.74234 27.4056L6.4908 26.1351C7.24834 25.9324 7.40794 25.9027 7.52532 25.9108C7.54615 25.9123 7.62693 25.9238 7.85024 26.0055C8.06917 26.0857 8.35408 26.2058 8.7757 26.3838C10.3829 27.0626 12.1489 27.4375 14 27.4375C21.4213 27.4375 27.4375 21.4213 27.4375 14C27.4375 6.57865 21.4213 0.562479 14 0.562479ZM10.2161 6.81251L10.1003 6.81238C9.50073 6.81137 8.94761 6.81043 8.40364 7.0589C8.00845 7.23942 7.67218 7.54611 7.42732 7.85242C7.18247 8.15874 6.95737 8.5543 6.86833 8.97955C6.74628 9.56248 6.84694 10.006 6.95461 10.4805L6.96948 10.5461C7.51262 12.9515 8.7824 15.3101 10.7359 17.2636C12.6894 19.2171 15.048 20.4869 17.4534 21.03L17.519 21.0449C17.9935 21.1525 18.437 21.2532 19.0199 21.1311C19.4452 21.0421 19.8407 20.817 20.1471 20.5722C20.4534 20.3273 20.7601 19.991 20.9406 19.5958C21.189 19.0519 21.1881 18.4988 21.1871 17.8992L21.187 17.7834C21.187 17.5079 21.1785 17.044 20.9998 16.6152C20.7863 16.103 20.3466 15.6808 19.6573 15.5728L19.6501 15.5717C18.7957 15.4378 18.1464 15.336 17.687 15.2693C17.4572 15.2358 17.2664 15.2099 17.1171 15.193C16.9944 15.179 16.8256 15.1615 16.6844 15.1698C16.0724 15.2056 15.5857 15.4538 15.2087 15.7122C14.9688 15.8766 14.7081 16.0968 14.5031 16.2699C14.4226 16.3379 14.3507 16.3987 14.292 16.4459L14.0441 16.6455C13.7497 16.8825 13.6025 17.0011 13.4226 16.9987C13.2427 16.9964 13.106 16.8804 12.8328 16.6485C12.5692 16.4248 12.3119 16.1879 12.0617 15.9377C11.8116 15.6876 11.5747 15.4302 11.351 15.1667C11.119 14.8934 11.0031 14.7568 11.0007 14.5769C10.9984 14.397 11.1169 14.2498 11.354 13.9554L11.5536 13.7075C11.6008 13.6488 11.6616 13.5769 11.7296 13.4964C11.9027 13.2913 12.1229 13.0307 12.2873 12.7907C12.5457 12.4138 12.7939 11.927 12.8297 11.3151C12.838 11.1739 12.8204 11.0051 12.8065 10.8824C12.7896 10.7331 12.7636 10.5423 12.7302 10.3124C12.6635 9.85308 12.5617 9.20375 12.4278 8.34934L12.4267 8.34219C12.3186 7.65289 11.8965 7.21314 11.3843 6.99969C10.9555 6.82101 10.4916 6.81251 10.2161 6.81251Z" fill="#0D0D0D"/>
          </svg>
        {% elsif link contains 'youtube' %}
          <svg width="28" height="24" viewBox="0 0 28 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fillRule="evenodd" clipRule="evenodd" d="M7.37108 1.08967C9.44481 0.666952 11.6769 0.4375 14.0001 0.4375C16.3234 0.4375 18.5555 0.666952 20.6292 1.08967L20.7883 1.12207C23.1566 1.60411 24.7346 1.9253 26.0944 3.67365C27.4396 5.40323 27.4389 7.40899 27.4377 10.5155V10.5155V13.4845V13.4845C27.4389 16.591 27.4396 18.5968 26.0944 20.3264C24.7346 22.0747 23.1566 22.3959 20.7883 22.8779L20.6292 22.9103C18.5555 23.333 16.3234 23.5625 14.0001 23.5625C11.6769 23.5625 9.44481 23.333 7.37108 22.9103L7.21198 22.8779C4.84369 22.3959 3.26569 22.0747 1.90587 20.3264C0.56065 18.5968 0.561402 16.591 0.562568 13.4845L0.562568 10.5155C0.561402 7.409 0.56065 5.40323 1.90587 3.67365C3.26569 1.9253 4.84369 1.60411 7.21198 1.12207L7.37108 1.08967ZM13.1183 7.31531C13.7665 7.58733 14.5538 8.02704 15.5164 8.56466C15.6432 8.63543 15.7705 8.70572 15.898 8.7761C16.5272 9.12348 17.1601 9.47288 17.7437 9.89254C18.2682 10.2697 18.7659 10.7371 18.9306 11.4186C19.0231 11.8013 19.0231 12.1987 18.9306 12.5814C18.7659 13.2629 18.2682 13.7303 17.7437 14.1075C17.1601 14.5271 16.5271 14.8766 15.8979 15.224C15.7704 15.2943 15.6431 15.3646 15.5165 15.4353C14.5538 15.973 13.7665 16.4127 13.1183 16.6847C12.0646 17.1269 10.9471 17.1627 10.0288 16.4102C9.45395 15.9393 9.25076 15.2649 9.16162 14.5854C8.94617 12.9429 8.94608 11.0577 9.16162 9.41465C9.25076 8.73508 9.45395 8.06073 10.0288 7.58976C10.9471 6.83729 12.0646 6.87307 13.1183 7.31531Z" fill="#0D0D0D"/>
          </svg>
        {% else %}
          <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M13 0.5C6.1 0.5 0.5 6.1 0.5 13C0.5 19.9 6.1 25.5 13 25.5C19.9 25.5 25.5 19.9 25.5 13C25.5 6.1 19.9 0.5 13 0.5ZM13 23.5C7.21 23.5 2.5 18.79 2.5 13C2.5 7.21 7.21 2.5 13 2.5C18.79 2.5 23.5 7.21 23.5 13C23.5 18.79 18.79 23.5 13 23.5Z" fill="#0D0D0D"/>
          </svg>
        {% endif %}
      </a>
    {% endfor %}
  </div>
</div>
{% endif %}

  </div>
</div>

<div class="sabbath-loading" style="display: none;">
  <p>Checking store status...</p>
</div>

<style>
  .sabbath-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: #FBFBFB;
    z-index: 999999;
    overflow-y: auto;
  }

  .sabbath-header {
    display: flex;
    flex-direction: row-reverse;
    justify-content: space-between;
    align-items: center;
    padding: 39px 100px;
  }

  .store-logo h1 {
    font-size: 24px;
    font-weight: 700;
    color: #333;
    text-transform: capitalize;
  }

  .contact-us {
    cursor: pointer;
  }

  .sabbath-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0;
    gap: 10px;
    width: 730px;
    margin: 0 auto;
  }

  .sabbath-title {
    text-align: center;
  }

  .sabbath-title h2 {
    font-weight: 900;
    font-size: 22px;
    margin-bottom: 8px;
  }

  .sabbath-title p {
    font-size: 16px;
    font-weight: 500;
    color: #777;
  }

  .sabbath-banner {
    width: 100%;
    min-height: 282px;
    border-radius: 16px;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .banner-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
  }

  .banner-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: 1;
  }

  .countdown-wrapper {
    margin-top: 32px;
    box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.08), 0px 5px 10px -2px rgba(0, 0, 0, 0.15);
    border: 1px solid #C6C6C6;
    border-radius: 16px;
    padding: 24px;
    text-align: center;
  }

  .countdown-wrapper h3 {
    font-weight: 900;
    font-size: 26px;
  
  }

  .countdown {
    display: flex;
    gap: 32px;
    justify-content: center;
  }

  .time-box {
    width: 115px;
    height: 115px;
    background: #F2F2F2;
    border: 1px solid #C6C6C6;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .time-box .number {
    font-size: 56px;
    font-weight: 500;
    color: #0D0D0D;
    margin-bottom :0
  }

  .time-box .label {
    font-size: 14px;
    color: #777777;
  }

  .social-links-container {
    width: 450px;
    padding: 16px;
    background: #FFFFFF;
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.05);
    border-radius: 0 0 16px 16px;
    margin-top: -10px;
  }

  .social-links-grid {
    display: flex;
    gap: 24px;
    justify-content: center;
    align-items: center;
  }

  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: #F5F5F5;
    border-radius: 50%;
    transition: transform 0.2s ease;
    color: #333333;
  }

  .social-link:hover {
    transform: scale(1.1);
    background: #EEEEEE;
  }

  .social-link svg {
    width: 24px;
    height: 24px;
  }
</style>
<script>
function calculateTimeLeft(openingDay, openingTime) {
  const now = new Date();
  const [hours, minutes] = openingTime.split(':');
  const target = new Date();
  
  const days = {
    'Saturday': 6,
    'Sunday': 0
  };
  
  let targetDay = days[openingDay];
  let daysUntil = targetDay - now.getDay();
  if (daysUntil <= 0) daysUntil += 7;
  
  target.setDate(target.getDate() + daysUntil);
  target.setHours(parseInt(hours), parseInt(minutes), 0, 0);

  const difference = target - now;
  
  if (difference > 0) {
    return {
      days: Math.floor(difference / (1000 * 60 * 60 * 24)),
      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),
      minutes: Math.floor((difference / 1000 / 60) % 60),
      seconds: Math.floor((difference / 1000) % 60)
    };
  }
  
  return null;
}

document.addEventListener('DOMContentLoaded', function() {
  const countdownEl = document.querySelector('.countdown');
  if (!countdownEl) return;

  const openingDay = countdownEl.dataset.openingDay;
  const openingTime = countdownEl.dataset.openingTime;

  function updateCountdown() {
    const timeLeft = calculateTimeLeft(openingDay, openingTime);
    if (!timeLeft) return;

    countdownEl.innerHTML = `
      <div class="time-box">
        <span class="number">${timeLeft.days}</span>
        <span class="label">Days</span>
      </div>
      
      <div class="time-box">
        <span class="number">${timeLeft.hours}</span>
        <span class="label">Hours</span>
      </div>
      
      <div class="time-box">
        <span class="number">${timeLeft.minutes}</span>
        <span class="label">Minutes</span>
      </div>
      
      <div class="time-box">
        <span class="number">${timeLeft.seconds}</span>
        <span class="label">Seconds</span>
      </div>
    `;
  }

  updateCountdown();
  setInterval(updateCountdown, 1000);
});
</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const countdownEl = document.querySelector('.countdown');
  if (!countdownEl) return;

  const openingDay = countdownEl.dataset.openingDay;
  const openingTime = countdownEl.dataset.openingTime;

  function calculateTimeLeft(openingDay, openingTime) {
    const now = new Date();
    const [hours, minutes] = openingTime.split(':');
    const target = new Date();
    
    const days = {
      'Saturday': 6,
      'Sunday': 0
    };
    
    let targetDay = days[openingDay];
    let daysUntil = targetDay - now.getDay();
    if (daysUntil <= 0) daysUntil += 7;
    
    target.setDate(target.getDate() + daysUntil);
    target.setHours(parseInt(hours), parseInt(minutes), 0, 0);

    const difference = target - now;
    
    if (difference > 0) {
      return {
        days: Math.floor(difference / (1000 * 60 * 60 * 24)),
        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),
        minutes: Math.floor((difference / 1000 / 60) % 60),
        seconds: Math.floor((difference / 1000) % 60)
      };
    }
    
    return null;
  }

  function updateCountdown() {
    const timeLeft = calculateTimeLeft(openingDay, openingTime);
    if (!timeLeft) return;

    const boxes = countdownEl.querySelectorAll('.time-box');
    const values = [timeLeft.days, timeLeft.hours, timeLeft.minutes, timeLeft.seconds];
    
    boxes.forEach((box, index) => {
      const numberEl = box.querySelector('.number');
      if (numberEl) {
        numberEl.textContent = values[index];
      }
    });
  }

  updateCountdown();
  setInterval(updateCountdown, 1000);
});
</script>
{% endif %}

<script>
function getCurrentTimeInShopTimeZone() {
  try {
    const shopTimeZone = '{{ shop.timezone }}';
    return new Date().toLocaleString('en-US', { timeZone: shopTimeZone });
  } catch (e) {
    return new Date(); // Fallback to local time
  }
}
</script>

{% if block.settings.enable_accessibility %}
  <div class="accessibility-widget-container" 
       style="position: fixed; z-index: {{ accessibility_zindex }}; 
              {% case accessibility_icon_location %}
                {% when 'top_left' %}
                  top: {{ accessibility_top_spacing }}px; left: {{ accessibility_left_spacing }}px;
                {% when 'top_right' %}
                  top: {{ accessibility_top_spacing }}px; right: {{ accessibility_left_spacing }}px;
                {% when 'bottom_left' %}
                  bottom: {{ accessibility_top_spacing }}px; left: {{ accessibility_left_spacing }}px;
                {% when 'bottom_right' %}
                  bottom: {{ accessibility_top_spacing }}px; right: {{ accessibility_left_spacing }}px;
              {% endcase %}">
    
    <button class="accessibility-button" 
            aria-label="{{ accessibility_help_title }}"
            aria-expanded="false"
            aria-controls="accessibility-panel"
            style="background-color: {{ accessibility_button_bg_color }};
                   border-radius: {% if accessibility_icon_shape == 'rounded' %}50%{% else %}8px{% endif %};
                   width: {% case accessibility_icon_size %}
                            {% when 'small' %}32px
                            {% when 'large' %}64px
                            {% else %}48px
                          {% endcase %};
                   height: {% case accessibility_icon_size %}
                            {% when 'small' %}32px
                            {% when 'large' %}64px
                            {% else %}48px
                          {% endcase %};">
      
      <span class="accessibility-icon" style="color: {{ accessibility_button_icon_color }};">
        {% case accessibility_icon_type %}
          {% when 'modern' %}
            <svg viewBox="0 0 24 24" fill="currentColor"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-10h2v5h-2zm0-4h2v2h-2z"/></svg>
          {% when 'classic' %}
            <svg viewBox="0 0 24 24" fill="currentColor"><path d="M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zm0 20c-4.97 0-9-4.03-9-9s4.03-9 9-9 9 4.03 9 9-4.03 9-9 9zm1-9v4h-2v-4H9l3-3 3 3h-2z"/></svg>
          {% else %}
            <svg viewBox="0 0 24 24" fill="currentColor"><path d="M20.5 6c-2.61.7-5.67 1-8.5 1s-5.89-.3-8.5-1L3 8c1.86.5 4 .83 6 1v13h2v-6h2v6h2V9c2-.17 4.14-.5 6-1l-.5-2zM12 6c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"/></svg>
        {% endcase %}
      </span>
      
      <span class="accessibility-tooltip" style="color: {{ accessibility_button_text_color }};">
        {{ accessibility_help_title }}
      </span>
    </button>

    <div id="accessibility-panel" class="accessibility-panel" aria-hidden="true">
      <div class="accessibility-panel-header">
        <h2>{{ accessibility_help_title }}</h2>
        <button class="close-panel" aria-label="Close accessibility panel">&times;</button>
      </div>
      <div class="accessibility-panel-content">
        
      
  
  
  <!-- Keyboard Navigation -->
  <div class="accessibility-section">
    <div class="section-header">ניווט מקלדת</div>
    <button class="accessibility-option" data-action="keyboard-nav">
      <span class="icon">⌨️</span>
      <span class="label">ניווט מקלדת</span>
    </button>
  </div>
  
  <!-- Color Settings -->
  <div class="accessibility-section">
    <div class="section-header">חסימת אנימציות</div>
    <button class="accessibility-option" data-action="animations-block">
      <span class="icon">🚫</span>
      <span class="label">חסימת אנימציות</span>
    </button>
  </div>
  
  <!-- Color Adjustments -->
  <div class="accessibility-section">
    <div class="section-header">ניגודיות צבעים</div>
    <div class="options-grid">
      <button class="accessibility-option" data-action="contrast-default">
        <span class="icon">⚪</span>
        <span class="label">תצוגת מוגברת</span>
      </button>
      <button class="accessibility-option" data-action="contrast-choice">
        <span class="icon">⚫</span>
        <span class="label">ניגודיות בהירה</span>
      </button>
      <button class="accessibility-option" data-action="contrast-invert">
        <span class="icon">⚪</span>
        <span class="label">ניגודיות הפוכה</span>
      </button>
    </div>
  </div>
  
  <!-- Text Size -->
  <div class="accessibility-section">
    <div class="section-header">גודל טקסט</div>
    <div class="options-grid">
      <button class="accessibility-option" data-action="text-increase">
        <span class="icon">↑</span>
        <span class="label">הגדלת גופן</span>
      </button>
      <button class="accessibility-option" data-action="text-decrease">
        <span class="icon">↓</span>
        <span class="label">הקטנת גופן</span>
      </button>
      <button class="accessibility-option" data-action="text-readable">
        <span class="icon">T</span>
        <span class="label">גופן קריא</span>
      </button>
    </div>
  </div>
  
  <!-- Content Highlighting -->
  <div class="accessibility-section">
    <div class="section-header">הדגשת תוכן</div>
    <div class="options-grid">
      <button class="accessibility-option" data-action="highlight-links">
        <span class="icon">🔗</span>
        <span class="label">הדגשת קישורים</span>
      </button>
      <button class="accessibility-option" data-action="highlight-headings">
        <span class="icon">H</span>
        <span class="label">הדגשת כותרות</span>
      </button>
      <button class="accessibility-option" data-action="highlight-images">
        <span class="icon">🖼️</span>
        <span class="label">תיאור לתמונות</span>
      </button>
    </div>
  </div>
  
  <!-- Cursor Options -->
  <div class="accessibility-section">
    <div class="section-header">הגדלת תצוגה</div>
    <div class="options-grid">
      <button class="accessibility-option" data-action="cursor-large-white">
        <span class="icon">⬜</span>
        <span class="label">סמן לבן גדול</span>
      </button>
      <button class="accessibility-option" data-action="cursor-large-black">
        <span class="icon">⬛</span>
        <span class="label">סמן שחור גדול</span>
      </button>
      <button class="accessibility-option" data-action="zoom-enable">
        <span class="icon">🔍</span>
        <span class="label">הגדלת תצוגה</span>
      </button>
    </div>
  </div>
  
  <!-- Declaration and Reporting -->
  <div class="accessibility-section">
    <button class="accessibility-option" data-action="declaration">
      <span class="label">הצהרת נגישות</span>
    </button>
    <button class="accessibility-option" data-action="report-issue">
      <span class="label">דווח על בעיית נגישות</span>
    </button>
    <button class="accessibility-option" data-action="reset-settings">
      <span class="icon">↻</span>
      <span class="label">איפוס נגישות</span>
    </button>
  </div>

  {{ accessibility_help_text }}
        {% if accessibility_owner_email != blank %}
          <div class="accessibility-contact">
            <p>Contact for accessibility issues:</p>
            <a href="mailto:{{ accessibility_owner_email }}">{{ accessibility_owner_email }}</a>
          </div>
        {% endif %}
</div>

    </div>
  </div>

  <style>
    .accessibility-widget-container {
      display: block;
      pointer-events: auto;
    }

    .accessibility-button {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 8px;
      border: none;
      cursor: pointer;
      transition: transform 0.3s ease;
      position: relative;
      box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }

    .accessibility-button:hover {
      transform: scale(1.1);
    }

    .accessibility-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
    }

    .accessibility-icon svg {
      width: 100%;
      height: 100%;
    }

    .accessibility-tooltip {
      position: absolute;
      background: rgba(0,0,0,0.8);
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 12px;
      white-space: nowrap;
      opacity: 0;
      transition: opacity 0.3s;
      pointer-events: none;
      
      {% case accessibility_icon_location %}
        {% when 'top_left' or 'top_right' %}
          bottom: -30px;
        {% else %}
          top: -30px;
      {% endcase %}
    }

    .accessibility-button:hover .accessibility-tooltip {
      opacity: 1;
    }

    .accessibility-panel {
      display: none;
      position: absolute;
      width: 300px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      
      {% case accessibility_icon_location %}
        {% when 'top_left' %}
          top: 100%;
          left: 0;
        {% when 'top_right' %}
          top: 100%;
          right: 0;
        {% when 'bottom_left' %}
          bottom: 100%;
          left: 0;
        {% when 'bottom_right' %}
          bottom: 100%;
          right: 0;
      {% endcase %}
    }

    .accessibility-panel.active {
      display: block;
    }

    .accessibility-panel-header {
      padding: 16px;
      border-bottom: 1px solid #eee;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .accessibility-panel-header h2 {
      margin: 0;
      font-size: 18px;
    }

    .close-panel {
      background: none;
      border: none;
      font-size: 24px;
      cursor: pointer;
      padding: 0 8px;
    }

    .accessibility-panel-content {
      padding: 16px;
      font-size: 14px;
      line-height: 1.5;
      max-height: 400px;
      overflow-y: auto;
    }

    .accessibility-contact {
      margin-top: 16px;
      padding-top: 16px;
      border-top: 1px solid #eee;
    }

    .accessibility-contact p {
      margin: 0 0 8px 0;
      font-weight: bold;
    }

    .accessibility-contact a {
      color: #0066cc;
      text-decoration: none;
    }

    .accessibility-contact a:hover {
      text-decoration: underline;
    }


    .accessibility-widget-container {
  display: block;
  pointer-events: auto;
  direction: rtl;
  text-align: right;
  font-family: 'Rubik', 'Arial', sans-serif;
}

.accessibility-button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  border: none;
  cursor: pointer;
  transition: transform 0.3s ease;
  position: relative;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  z-index: 999999;
}

.accessibility-button:hover {
  transform: scale(1.1);
}

.accessibility-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.accessibility-icon svg {
  width: 100%;
  height: 100%;
}

.accessibility-panel {
  display: none;
  position: absolute;
  width: 320px;
  max-height: 80vh;
  overflow-y: auto;
  background: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  z-index: 999999;
}

.accessibility-panel.active {
  display: block;
}

.accessibility-panel-header {
  padding: 16px;
  background: #0D1117;
  color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 2;
}

.accessibility-panel-header h2 {
  margin: 0;
  font-size: 18px;
  font-weight: 600;
}

.close-panel {
  background: none;
  border: none;
  color: white;
  font-size: 24px;
  cursor: pointer;
  padding: 0 8px;
}

.accessibility-section {
  padding: 8px 16px;
  border-bottom: 1px solid #eee;
}

.section-header {
  font-weight: 600;
  margin: 8px 0;
  color: #800000;
  font-size: 16px;
}

.options-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
  margin: 8px 0;
}

.accessibility-option {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: #f5f5f5;
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 8px;
  cursor: pointer;
  transition: background-color 0.2s;
  text-align: center;
  min-height: 80px;
}

.accessibility-option:hover {
  background: #e8e8e8;
}

.accessibility-option.active {
  background: #e0e7ff;
  border-color: #4f46e5;
}

.icon-container {
  margin-bottom: 4px;
  height: 24px;
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.label {
  font-size: 14px;
  line-height: 1.2;
}

.accessibility-option:not(.options-grid .accessibility-option) {
  flex-direction: row;
  justify-content: flex-start;
  padding: 12px;
  min-height: unset;
  margin: 8px 0;
  width: 100%;
}

.accessibility-option:not(.options-grid .accessibility-option) .icon-container {
  margin-bottom: 0;
  margin-left: 8px;
}

/* Custom cursor styles */
.large-white-cursor {
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path d="M13.64 21.97C13.14 22.21 12.54 22 12.31 21.5L10.13 16.76L7.62 18.78C7.39 18.95 7.05 18.94 6.82 18.77C6.6 18.59 6.5 18.3 6.5 18V3C6.5 2.73 6.63 2.5 6.82 2.33C7.05 2.17 7.36 2.15 7.61 2.29L7.65 2.32L18.43 11.68C18.6 11.84 18.68 12.06 18.68 12.28C18.67 12.52 18.57 12.73 18.39 12.88L16.3 14.5L18.89 19.85C19.12 20.35 18.89 20.93 18.39 21.17L13.64 21.97Z" fill="white" stroke="black" stroke-width="1"/></svg>') 16 16, auto !important;
}

.large-black-cursor {
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path d="M13.64 21.97C13.14 22.21 12.54 22 12.31 21.5L10.13 16.76L7.62 18.78C7.39 18.95 7.05 18.94 6.82 18.77C6.6 18.59 6.5 18.3 6.5 18V3C6.5 2.73 6.63 2.5 6.82 2.33C7.05 2.17 7.36 2.15 7.61 2.29L7.65 2.32L18.43 11.68C18.6 11.84 18.68 12.06 18.68 12.28C18.67 12.52 18.57 12.73 18.39 12.88L16.3 14.5L18.89 19.85C19.12 20.35 18.89 20.93 18.39 21.17L13.64 21.97Z" fill="black"/></svg>') 16 16, auto !important;
}

/* High contrast mode */
body.high-contrast {
  filter: contrast(1.5);
}

body.inverted-colors {
  filter: invert(1) hue-rotate(180deg);
}

body.inverted-colors img,
body.inverted-colors video {
  filter: invert(1) hue-rotate(180deg);
}

/* Link highlighting */
body.highlight-links a {
  background-color: yellow !important;
  color: black !important;
  text-decoration: underline !important;
  font-weight: bold !important;
  border: 2px solid black !important;
  padding: 2px !important;
}

/* Heading highlighting */
body.highlight-headings h1,
body.highlight-headings h2,
body.highlight-headings h3,
body.highlight-headings h4,
body.highlight-headings h5,
body.highlight-headings h6 {
  background-color: #ffcccb !important;
  color: black !important;
  border: 2px dashed black !important;
  padding: 5px !important;
}

/* Image highlighting */
body.highlight-images img {
  border: 3px solid red !important;
  padding: 2px !important;
}

/* Animations blocking */
body.no-animations *,
body.no-animations *::before,
body.no-animations *::after {
  animation: none !important;
  transition: none !important;
}

/* Readable font */
body.readable-font * {
  font-family: Arial, sans-serif !important;
  letter-spacing: 0.12em !important;
  word-spacing: 0.16em !important;
  line-height: 1.5 !important;
}

/* Zoom lens */
.zoom-lens {
  position: fixed;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  border: 2px solid black;
  pointer-events: none;
  z-index: 9999;
  background-color: white;
  display: none;
  transform: scale(1.5);
  background-repeat: no-repeat;
  box-shadow: 0 0 10px rgba(0,0,0,0.5);
}

/* Keyboard navigation focus */
body.keyboard-nav :focus {
  outline: 3px solid blue !important;
  outline-offset: 3px !important;
}

/* Focus not visible when not in keyboard nav mode */
body:not(.keyboard-nav) :focus {
    align-items: center;
    justify-content: center;
    padding: 8px;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 999999;
    animation: floatButton 3s ease-in-out infinite;
  }

  @keyframes floatButton {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
    100% {
      transform: translateY(0);
    }
  }

  .accessibility-button:hover {
    transform: scale(1.1);
    animation-play-state: paused;
  }

  /* Ensure the panel appears above other elements */
  .accessibility-panel.active {
    z-index: 999998;
    position: absolute;
  }

  /* Prevent panel from inheriting float animation */
  .accessibility-panel {
    animation: none;
  }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
  // Initialize accessibility widget
  initAccessibilityWidget();

  function initAccessibilityWidget() {
    const button = document.querySelector('.accessibility-button');
    const panel = document.querySelector('.accessibility-panel');
    const closeButton = document.querySelector('.close-panel');
    const options = document.querySelectorAll('.accessibility-option');
    
    // Load saved settings
    loadSavedSettings();

    // Toggle panel visibility
    if (button && panel && closeButton) {
      button.addEventListener('click', function() {
        const isExpanded = panel.classList.contains('active');
        panel.classList.toggle('active');
        button.setAttribute('aria-expanded', !isExpanded);
        panel.setAttribute('aria-hidden', isExpanded);
      });

      closeButton.addEventListener('click', function() {
        panel.classList.remove('active');
        button.setAttribute('aria-expanded', 'false');
        panel.setAttribute('aria-hidden', 'true');
      });

      // Close panel when clicking outside
      document.addEventListener('click', function(event) {
        if (!panel.contains(event.target) && !button.contains(event.target)) {
          panel.classList.remove('active');
          button.setAttribute('aria-expanded', 'false');
          panel.setAttribute('aria-hidden', 'true');
        }
      });

      // Add keyboard navigation
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && panel.classList.contains('active')) {
          panel.classList.remove('active');
          button.setAttribute('aria-expanded', 'false');
          panel.setAttribute('aria-hidden', 'true');
        }
      });
    }

    // Attach event listeners to all accessibility options
    options.forEach(option => {
      option.addEventListener('click', function() {
        const action = this.dataset.action;
        handleAccessibilityAction(action, this);
      });
    });

    // Create zoom lens element
    const zoomLens = document.createElement('div');
    zoomLens.classList.add('zoom-lens');
    document.body.appendChild(zoomLens);
  }

  function handleAccessibilityAction(action, element) {
    if (!element) return;
    
    switch(action) {
      case 'keyboard-nav':
        toggleFeature('keyboard-nav', 'keyboard-nav');
        break;
      
      case 'animations-block':
        toggleFeature('no-animations', 'animations-block');
        break;
      
      case 'contrast-default':
        removeFeature('high-contrast');
        removeFeature('inverted-colors');
        setActiveInGroup('contrast-default', element);
        saveSettings('contrast', 'default');
        break;
      
      case 'contrast-choice':
        addFeature('high-contrast');
        removeFeature('inverted-colors');
        setActiveInGroup('contrast-choice', element);
        saveSettings('contrast', 'high');
        break;
      
      case 'contrast-invert':
        addFeature('inverted-colors');
        removeFeature('high-contrast');
        setActiveInGroup('contrast-invert', element);
        saveSettings('contrast', 'inverted');
        break;
      
      case 'text-increase':
        changeFontSize(1);
        break;
      
      case 'text-decrease':
        changeFontSize(-1);
        break;
      
      case 'text-readable':
        toggleFeature('readable-font', 'text-readable');
        break;
      
      case 'highlight-links':
        toggleFeature('highlight-links', 'highlight-links');
        break;
      
      case 'highlight-headings':
        toggleFeature('highlight-headings', 'highlight-headings');
        break;
      
      case 'highlight-images':
        toggleFeature('highlight-images', 'highlight-images');
        break;
      
      case 'cursor-large-white':
        removeFeature('large-black-cursor');
        toggleFeature('large-white-cursor', 'cursor-large-white');
        break;
      
      case 'cursor-large-black':
        removeFeature('large-white-cursor');
        toggleFeature('large-black-cursor', 'cursor-large-black');
        break;
      
      case 'zoom-enable':
        toggleZoomLens();
        break;
      
      case 'declaration':
        showAccessibilityDeclaration();
        break;
      
      case 'report-issue':
        reportAccessibilityIssue();
        break;
      
      case 'reset-settings':
        resetAllSettings();
        break;
    }
  }

  // Toggle a feature on or off
  function toggleFeature(className, optionName) {
    const body = document.body;
    const option = document.querySelector(`.${optionName}`);
    
    if (body.classList.contains(className)) {
      body.classList.remove(className);
      option.classList.remove('active');
      saveSettings(optionName, false);
    } else {
      body.classList.add(className);
      option.classList.add('active');
      saveSettings(optionName, true);
    }
  }

  // Add a feature
  function addFeature(className) {
    document.body.classList.add(className);
  }

  // Remove a feature
  function removeFeature(className) {
    document.body.classList.remove(className);
  }

  // Set active state in a group of options
  function setActiveInGroup(activeOption, element) {
    if (!element) return;
    
    // Find the closest parent with options-grid class
    const parent = element.closest('.options-grid');
    if (!parent) return;
    
    // Remove active class from all options in the group
    const options = parent.querySelectorAll('.accessibility-option');
    options.forEach(option => {
      if (option) option.classList.remove('active');
    });
    
    // Add active class to clicked element
    element.classList.add('active');
  }

  // Change font size
  function changeFontSize(direction) {
    const html = document.documentElement;
    let currentSize = parseFloat(getComputedStyle(html).fontSize);
    
    // Get saved font size or use current
    if (localStorage.getItem('a11y-font-size')) {
      currentSize = parseFloat(localStorage.getItem('a11y-font-size'));
    }
    
    // Increase or decrease by 1px, with limits
    let newSize = currentSize + direction;
    if (newSize < 12) newSize = 12;
    if (newSize > 24) newSize = 24;
    
    html.style.fontSize = `${newSize}px`;
    saveSettings('font-size', newSize);
    
    // Update active state of buttons
    const increaseBtn = document.querySelector('.text-increase');
    const decreaseBtn = document.querySelector('.text-decrease');
    
    if (newSize >= 24) {
      increaseBtn.setAttribute('disabled', 'true');
    } else {
      increaseBtn.removeAttribute('disabled');
    }
    
    if (newSize <= 12) {
      decreaseBtn.setAttribute('disabled', 'true');
    } else {
      decreaseBtn.removeAttribute('disabled');
    }
  }

  // Toggle zoom lens functionality
  function toggleZoomLens() {
    const zoomLens = document.querySelector('.zoom-lens');
    const zoomOption = document.querySelector('.zoom-enable');
    const zoomActive = zoomLens.style.display === 'block';
    
    if (zoomActive) {
      zoomLens.style.display = 'none';
      document.removeEventListener('mousemove', moveZoomLens);
      zoomOption.classList.remove('active');
      saveSettings('zoom-enable', false);
    } else {
      zoomLens.style.display = 'block';
      document.addEventListener('mousemove', moveZoomLens);
      zoomOption.classList.add('active');
      saveSettings('zoom-enable', true);
    }
  }

  // Move zoom lens with mouse
  function moveZoomLens(e) {
    const zoomLens = document.querySelector('.zoom-lens');
    
    // Position the lens
    const x = e.clientX - (zoomLens.offsetWidth / 2);
    const y = e.clientY - (zoomLens.offsetHeight / 2);
    
    zoomLens.style.left = `${x}px`;
    zoomLens.style.top = `${y}px`;
    
    // Create zoomed view
        // Create zoomed view
    const zoomFactor = 1.5;
    zoomLens.style.backgroundImage = `none`;
    zoomLens.style.backgroundSize = `${document.body.scrollWidth * zoomFactor}px ${document.body.scrollHeight * zoomFactor}px`;
    
    // Calculate background position
    const scrollX = window.scrollX || window.pageXOffset;
    const scrollY = window.scrollY || window.pageYOffset;
    
    const backgroundX = -((e.clientX + scrollX) * zoomFactor - zoomLens.offsetWidth / 2);
    const backgroundY = -((e.clientY + scrollY) * zoomFactor - zoomLens.offsetHeight / 2);
    
    // Apply background position
    zoomLens.style.backgroundPosition = `${backgroundX}px ${backgroundY}px`;
    
    // Capture page as image for zoom lens
    html2canvas(document.body).then(canvas => {
      const dataUrl = canvas.toDataURL();
      zoomLens.style.backgroundImage = `url(${dataUrl})`;
    });
  }

  // Show accessibility declaration
  function showAccessibilityDeclaration() {
    const declarationContent = `
      <div class="a11y-declaration-modal">
        <h2>הצהרת נגישות</h2>
        <p>אתר זה עומד בדרישות תקנות שוויון זכויות לאנשים עם מוגבלות (התאמות נגישות לשירות), התשע"ג-2013.</p>
        <p>האתר תוכנן ופותח כך שיהיה נגיש לכלל האוכלוסייה, כולל אנשים עם מוגבלויות.</p>
        <p>התאמות הנגישות בוצעו על פי המלצות התקן הישראלי (ת"י 5568) לנגישות תכנים באינטרנט ברמת AA ומסמך הנחיות הנגישות WCAG 2.0 הבינלאומי.</p>
        <button class="close-declaration">סגירה</button>
      </div>
    `;
    
    const modalOverlay = document.createElement('div');
    modalOverlay.classList.add('a11y-modal-overlay');
    modalOverlay.innerHTML = declarationContent;
    document.body.appendChild(modalOverlay);
    
    // Add styles
    const modalStyles = `
      .a11y-modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999999;
      }
      
      .a11y-declaration-modal {
        background: white;
        border-radius: 8px;
        padding: 20px;
        max-width: 500px;
        width: 90%;
        max-height: 80vh;
        overflow-y: auto;
        direction: rtl;
        text-align: right;
      }
      
      .a11y-declaration-modal h2 {
        margin-top: 0;
        color: #333;
      }
      
      .close-declaration {
        background: #0D1117;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 16px;
      }
    `;
    
    const styleElement = document.createElement('style');
    styleElement.textContent = modalStyles;
    document.head.appendChild(styleElement);
    
    // Add close functionality
    document.querySelector('.close-declaration').addEventListener('click', function() {
      document.body.removeChild(modalOverlay);
      document.head.removeChild(styleElement);
    });
  }

  // Report accessibility issue
  function reportAccessibilityIssue() {
    const reportFormContent = `
      <div class="a11y-report-modal">
        <h2>דווח על בעיית נגישות</h2>
        <form id="a11y-report-form">
          <div class="form-group">
            <label for="issue-type">סוג הבעיה:</label>
            <select id="issue-type" required>
              <option value="">בחר סוג בעיה</option>
              <option value="keyboard">בעיה בניווט מקלדת</option>
              <option value="screen-reader">בעיה בקורא מסך</option>
              <option value="contrast">בעיה בניגודיות צבעים</option>
              <option value="zoom">בעיה בהגדלת תצוגה</option>
              <option value="other">אחר</option>
            </select>
          </div>
          
          <div class="form-group">
            <label for="issue-description">תיאור הבעיה:</label>
            <textarea id="issue-description" rows="4" required></textarea>
          </div>
          
          <div class="form-group">
            <label for="contact-email">דוא"ל ליצירת קשר (לא חובה):</label>
            <input type="email" id="contact-email">
          </div>
          
          <div class="form-actions">
            <button type="button" class="cancel-report">ביטול</button>
            <button type="submit" class="submit-report">שליחה</button>
          </div>
        </form>
      </div>
    `;
    
    const modalOverlay = document.createElement('div');
    modalOverlay.classList.add('a11y-modal-overlay');
    modalOverlay.innerHTML = reportFormContent;
    document.body.appendChild(modalOverlay);
    
    // Add styles
    const modalStyles = `
      .a11y-modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999999;
      }
      
      .a11y-report-modal {
        background: white;
        border-radius: 8px;
        padding: 20px;
        max-width: 500px;
        width: 90%;
        max-height: 80vh;
        overflow-y: auto;
        direction: rtl;
        text-align: right;
      }
      
      .a11y-report-modal h2 {
        margin-top: 0;
        color: #333;
      }
      
      .form-group {
        margin-bottom: 16px;
      }
      
      .form-group label {
        display: block;
        margin-bottom: 4px;
        font-weight: 600;
      }
      
      .form-group select,
      .form-group textarea,
      .form-group input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
      
      .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 8px;
      }
      
      .cancel-report,
      .submit-report {
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
      }
      
      .cancel-report {
        background: #f5f5f5;
        border: 1px solid #ddd;
      }
      
      .submit-report {
        background: #0D1117;
        color: white;
        border: none;
      }
    `;
    
    const styleElement = document.createElement('style');
    styleElement.textContent = modalStyles;
    document.head.appendChild(styleElement);
    
    // Add form submission and close functionality
    document.querySelector('.cancel-report').addEventListener('click', function() {
      closeReportModal();
    });
    
    document.getElementById('a11y-report-form').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const issueType = document.getElementById('issue-type').value;
      const issueDescription = document.getElementById('issue-description').value;
      const contactEmail = document.getElementById('contact-email').value;
      
      // Send report data to server (implement according to your backend)
      
      // Show success message
      const formElement = document.getElementById('a11y-report-form');
      formElement.innerHTML = `
        <div class="success-message">
          <p>תודה על הדיווח! הבעיה תיבדק בהקדם.</p>
          <button type="button" class="close-report">סגירה</button>
        </div>
      `;
      
      document.querySelector('.close-report').addEventListener('click', function() {
        closeReportModal();
      });
    });
    
    function closeReportModal() {
      document.body.removeChild(modalOverlay);
      document.head.removeChild(styleElement);
    }
  }

  // Reset all accessibility settings
  function resetAllSettings() {
    // Remove all accessibility classes from body
    const accessibilityClasses = [
      'keyboard-nav',
      'no-animations',
      'high-contrast',
      'inverted-colors',
      'readable-font',
      'highlight-links',
      'highlight-headings',
      'highlight-images',
      'large-white-cursor',
      'large-black-cursor'
    ];
    
    accessibilityClasses.forEach(className => {
      document.body.classList.remove(className);
    });
    
    // Reset font size
    document.documentElement.style.fontSize = '';
    
    // Turn off zoom lens
    const zoomLens = document.querySelector('.zoom-lens');
    if (zoomLens) {
      zoomLens.style.display = 'none';
      document.removeEventListener('mousemove', moveZoomLens);
    }
    
    // Remove active class from all options
    const options = document.querySelectorAll('.accessibility-option');
    options.forEach(option => {
      option.classList.remove('active');
    });
    
    // Set default contrast option as active
    const defaultContrastOption = document.querySelector('.contrast-default');
    if (defaultContrastOption) {
      defaultContrastOption.classList.add('active');
    }
    
    // Clear local storage settings
    localStorage.removeItem('a11y-settings');
    localStorage.removeItem('a11y-font-size');
    
    // Show confirmation message
    const confirmationMessage = document.createElement('div');
    confirmationMessage.classList.add('a11y-confirmation');
    confirmationMessage.textContent = 'הגדרות הנגישות אופסו בהצלחה';
    document.body.appendChild(confirmationMessage);
    
    // Add styles for confirmation
    const confirmationStyles = `
      .a11y-confirmation {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: #4CAF50;
        color: white;
        padding: 10px 20px;
        border-radius: 4px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.2);
        z-index: 9999999;
        font-size: 16px;
        text-align: center;
        animation: fadeInOut 3s forwards;
      }
      
      @keyframes fadeInOut {
        0% { opacity: 0; }
        10% { opacity: 1; }
        90% { opacity: 1; }
        100% { opacity: 0; }
      }
    `;
    
    const styleElement = document.createElement('style');
    styleElement.textContent = confirmationStyles;
    document.head.appendChild(styleElement);
    
    // Remove confirmation after animation
    setTimeout(() => {
      document.body.removeChild(confirmationMessage);
      document.head.removeChild(styleElement);
    }, 3000);
  }

  // Save settings to localStorage
  function saveSettings(key, value) {
    let settings = JSON.parse(localStorage.getItem('a11y-settings') || '{}');
    settings[key] = value;
    localStorage.setItem('a11y-settings', JSON.stringify(settings));
    
    // Special case for font size
    if (key === 'font-size') {
      localStorage.setItem('a11y-font-size', value);
    }
  }

  // Load saved settings from localStorage
  function loadSavedSettings() {
    const settings = JSON.parse(localStorage.getItem('a11y-settings') || '{}');
    
    // Apply each saved setting
    Object.keys(settings).forEach(key => {
      const value = settings[key];
      
      switch(key) {
        case 'keyboard-nav':
          if (value) toggleFeature('keyboard-nav', 'keyboard-nav');
          break;
          
        case 'animations-block':
          if (value) toggleFeature('no-animations', 'animations-block');
          break;
          
        case 'contrast':
          const contrastButton = value === 'high' 
            ? document.querySelector('[data-action="contrast-choice"]')
            : value === 'inverted'
              ? document.querySelector('[data-action="contrast-invert"]')
              : document.querySelector('[data-action="contrast-default"]');
              
          if (contrastButton) {
            if (value === 'high') {
              addFeature('high-contrast');
              removeFeature('inverted-colors');
            } else if (value === 'inverted') {
              addFeature('inverted-colors');
              removeFeature('high-contrast');
            } else {
              removeFeature('high-contrast');
              removeFeature('inverted-colors');
            }
            setActiveInGroup(null, contrastButton);
          }
          break;
          
        case 'text-readable':
          if (value) toggleFeature('readable-font', 'text-readable');
          break;
          
        case 'highlight-links':
          if (value) toggleFeature('highlight-links', 'highlight-links');
          break;
          
        case 'highlight-headings':
          if (value) toggleFeature('highlight-headings', 'highlight-headings');
          break;
          
        case 'highlight-images':
          if (value) toggleFeature('highlight-images', 'highlight-images');
          break;
          
        case 'cursor-large-white':
          if (value) {
            removeFeature('large-black-cursor');
            toggleFeature('large-white-cursor', 'cursor-large-white');
          }
          break;
          
        case 'cursor-large-black':
          if (value) {
            removeFeature('large-white-cursor');
            toggleFeature('large-black-cursor', 'cursor-large-black');
          }
          break;
          
        case 'zoom-enable':
          if (value) {
            const zoomLens = document.querySelector('.zoom-lens');
            if (zoomLens) {
              zoomLens.style.display = 'block';
              document.addEventListener('mousemove', moveZoomLens);
              document.querySelector('.zoom-enable').classList.add('active');
            }
          }
          break;
      }
    });
    
    // Apply saved font size
    const savedFontSize = localStorage.getItem('a11y-font-size');
    if (savedFontSize) {
      document.documentElement.style.fontSize = `${savedFontSize}px`;
    }
  }

  // Add keyboard navigation detection
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Tab') {
      document.body.classList.add('keyboard-user');
    }
  });

  document.addEventListener('mousedown', function() {
    document.body.classList.remove('keyboard-user');
  });

  // Optional: Add html2canvas library for zoom functionality
  function loadHtml2Canvas() {
    if (typeof html2canvas === 'undefined') {
      const script = document.createElement('script');
      script.src = 'https://html2canvas.hertzen.com/dist/html2canvas.min.js';
      script.onload = function() {
      };
      document.head.appendChild(script);
    }
  }
  
  loadHtml2Canvas();
});

  </script>
{% endif %}

{% schema %}
{
  "name": "Hebrew App",
  "target": "body",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_rtl",
      "label": "Enable RTL",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_buy_now_text",
      "label": "Enable Custom Buy Now Text",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_alternative_font",
      "label": "Enable Alternative Font",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_footer_banners",
      "label": "Enable Footer Banners",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_whatsapp",
      "label": "Enable WhatsApp Button",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_accessibility",
      "label": "Enable Accessibility Widget",
      "default": false
    }
  ]
}
{% endschema %}

<style>
  .remote-img[src^="http"] {
    max-width: 100%;
    height: auto;
  }
</style>

<script>
  // Add asset host to remote images
  document.querySelectorAll('img[src^="http"]').forEach(img => {
    img.classList.add('remote-img');
  });
</script>

<script src="https://code.iconify.design/3/3.1.0/iconify.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Define icon mappings
  const iconMappings = {
    'payment-visa': 'logos:visa',
    'payment-mastercard': 'logos:mastercard',
    'payment-paypal': 'logos:paypal',
    'payment-apple-pay': 'logos:apple-pay',
    'payment-google-pay': 'logos:google-pay',
    'feature-secure': 'material-symbols:security',
    'feature-fast': 'material-symbols:speed',
    'feature-reliable': 'material-symbols:verified',
    'calendar-jewish': 'mdi:star-david',
    'calendar-gregorian': 'mdi:calendar',
    'calendar-hebrew': 'mdi:calendar-star'
  };

  // Apply icon mappings
  document.querySelectorAll('.iconify').forEach(icon => {
    const requestedIcon = icon.getAttribute('data-icon');
    if (iconMappings[requestedIcon]) {
      icon.setAttribute('data-icon', iconMappings[requestedIcon]);
    }
  });
});
</script>

<style>
.iconify.payment-icon,
.iconify.feature-icon,
.iconify.calendar-icon {
  display: inline-block;
  margin: 5px;
  vertical-align: middle;
}

.payment-icon {
  color: #1a1a1a;
}

.feature-icon {
  color: #0066cc;
}

.calendar-icon {
  color: #4a4a4a;
}
</style>
